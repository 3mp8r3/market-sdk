/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

export interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface FusePoolLensV2 extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): FusePoolLensV2;
  clone(): FusePoolLensV2;
  methods: {
    directory(): NonPayableTransactionObject<string>;

    getPoolOwnership(comptroller: string): NonPayableTransactionObject<{
      0: string;
      1: boolean;
      2: boolean;
      3: [string, string, boolean, boolean][];
    }>;

    getPoolSummary(comptroller: string): NonPayableTransactionObject<{
      0: string;
      1: string;
      2: string[];
      3: string[];
    }>;

    getPoolsWithData(
      indexes: (number | string | BN)[],
      pools: [
        string,
        string,
        string,
        number | string | BN,
        number | string | BN
      ][]
    ): NonPayableTransactionObject<{
      0: string[];
      1: [string, string, string, string, string][];
      2: string[];
      3: string[];
      4: string[][];
      5: string[][];
      6: boolean[];
    }>;

    getPublicPoolsWithData(): NonPayableTransactionObject<{
      0: string[];
      1: [string, string, string, string, string][];
      2: string[];
      3: string[];
      4: string[][];
      5: string[][];
      6: boolean[];
    }>;

    getWhitelistedPoolsByAccount(account: string): NonPayableTransactionObject<{
      0: string[];
      1: [string, string, string, string, string][];
    }>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
